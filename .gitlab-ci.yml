# Use a debian image with python 3.5 (and pip3) pre-installed
image: python:3.5-stretch

variables:
  BGD: bgd

stages:
  - test
  - post
  - deploy


before_script:
  - python3 -m pip install --upgrade setuptools pip
  - export PATH=~/.local/bin:${PATH}
  - python3 -m pip install --user --editable ".[tests]"

.tests-template: &linux-tests
  stage: test
  variables:
    PYTEST_ADDOPTS: "--color=yes"
  script:
    - python3 -m pip install --user --editable ".[auth]"
    - python3 setup.py test
    - mkdir -p coverage/
    - cp .coverage coverage/coverage."${CI_JOB_NAME}"
  artifacts:
    paths:
    - coverage/

.run-dummy-job-template: &dummy-job
  stage: test
  script:
    - ${BGD} server start buildgrid/_app/settings/default.yml &
    - sleep 1 # Allow server to boot
    - ${BGD} bot dummy &
    - ${BGD} cas upload-dummy
    - ${BGD} execute request-dummy --wait-for-completion


# Test stage, build and test the code.
#
tests-debian-stretch:
  <<: *linux-tests

run-dummy-job-debian:
  <<: *dummy-job


# Post-build stage, documentation, coverage report...
#
documentation:
  stage: post
  script:
    - apt-get update && apt-get install -y graphviz
    - python3 -m pip install --user --editable ".[docs]"
    - make -C docs html
    - mkdir -p documentation/
    - cp -a docs/build/html/. documentation/
  artifacts:
    paths:
    - documentation/

coverage:
  stage: post
  dependencies:
  - tests-debian-stretch
  coverage: '/TOTAL +\d+ +\d+ +(\d+\.\d+)%/'
  script:
    - python3 -m pip install --user --editable ".[tests]"
    - cd coverage/
    - ls -l .
    - python3 -m coverage combine --rcfile=../.coveragerc --append coverage.*
    - python3 -m coverage html --rcfile=../.coveragerc --directory .
    - python3 -m coverage report --rcfile=../.coveragerc --show-missing
    - python3 -m coverage erase --rcfile=../.coveragerc
  artifacts:
    paths:
    - coverage/

# Deployement stage, only for merges which land on master branch.
#
pages:
  stage: deploy
  dependencies:
  - coverage
  - documentation
  script:
  - mkdir -p public/coverage/
  - cp -a coverage/* public/coverage/
  - ls -la public/coverage/
  - cp -a documentation/* public/
  - ls -la public/
  artifacts:
    paths:
    - public/
  only:
  - master
